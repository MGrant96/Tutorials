"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.auth = void 0;
var crypto_module_1 = require("../modules/crypto.module");
var jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
var http_response_codes_enum_1 = require("../enums/http-response-codes.enum");
var response_api_model_1 = require("../models/response-api.model");
var crypto = new crypto_module_1.CryptoModule(process.env.CRYPTO_KEY);
var auth = function (role) {
    return function (req, res, next) {
        // verify token
        var token = req.headers.authorization;
        if (token) {
            jsonwebtoken_1.default.verify(token, 'BN@7//(!<)z2LNQHjS^d6R-j&:*ThWV^', function (err, decoded) {
                if (err) {
                    res.status(http_response_codes_enum_1.HttpStatusCode.Unauthorized).json(new response_api_model_1.ResponseApiError("Unauthorized"));
                }
                else {
                    if (decoded && decoded.data) {
                        var data = JSON.parse(crypto.decrypt(decoded.data));
                        if (data.role === role) {
                            next();
                        }
                        else {
                            res.status(http_response_codes_enum_1.HttpStatusCode.Unauthorized).json(new response_api_model_1.ResponseApiError("Unauthorized"));
                        }
                    }
                    else {
                        res.status(http_response_codes_enum_1.HttpStatusCode.Unauthorized).json(new response_api_model_1.ResponseApiError("Unauthorized"));
                    }
                }
            });
        }
        else {
            res.status(http_response_codes_enum_1.HttpStatusCode.Unauthorized).json(new response_api_model_1.ResponseApiError("Unauthorized"));
        }
        // decode the payload
        // check if the role is matching
    };
};
exports.auth = auth;
